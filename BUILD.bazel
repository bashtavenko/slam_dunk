load("@buildifier_prebuilt//:rules.bzl", "buildifier")
load("@rules_cc//cc:defs.bzl", "cc_binary")

package(default_visibility = ["//visibility:public"])

buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./bazel-*/*",
        "./.git/*",
    ],
    lint_mode = "fix",
)

cc_library(
    name = "sdk",
    srcs = ["third_party/rplidar/libsl_lidar_sdk.a"],
    hdrs = glob(["third_party/rplidar/include/**/*.h"]),
)

cc_binary(
    name = "runner_main",
    srcs = ["runner_main.cc"],
    data = ["//testdata"],
    deps = [
        "sdk",
        ":lidar",
        ":visualizer_client",
        "//proto:lidar_proto_cc",
        "@absl//absl/flags:flag",
        "@absl//absl/flags:parse",
        "@absl//absl/memory",
        "@absl//absl/status",
        "@absl//absl/strings:str_format",
        "@gflags",
        "@glog",
    ],
)

cc_library(
    name = "lidar",
    srcs = ["lidar.cc"],
    hdrs = ["lidar.h"],
    deps = [
        ":sdk",
        "@absl//absl/memory",
        "@absl//absl/status:statusor",
        "@absl//absl/strings:str_format",
    ],
)

cc_library(
    name = "visualizer_client",
    srcs = ["visualizer_client.cc"],
    hdrs = ["visualizer_client.h"],
    deps = ["@absl//absl/memory",
            "@absl//absl/status:statusor",
            "@absl//absl/strings",
            "@absl//absl/types:optional"],
)